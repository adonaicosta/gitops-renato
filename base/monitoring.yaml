apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  destination:
    name: ''
    namespace: monitoring
    server: 'https://kubernetes.default.svc'
  source:
    path: ''
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 58.2.2
    chart: kube-prometheus-stack
    helm:
      values: |-
        defaultRules:
          rules:
            kubeControllerManager: false
            kubeProxy: false
            kubeSchedulerAlerting: false
            kubeSchedulerRecording: false
            kubeApiserverBurnrate: false
            kubernetesSystem: false
            kubelet: false
            etcd: false

        kubeApiServer:
          enabled: true
          serviceMonitor:
            additionalLabels:
              cluster: cluster-prd
        kubeEtcd:
          enabled: false
        kubeProxy:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeControllerManager:
          enabled: false

        grafana:
          assertNoLeakedSecrets: false
          serviceMonitor:
            enabled: true
            scrapeTimeout: 10s
          adminPassword: prom-operator
          deploymentStrategy:
            type: Recreate
          additionalDataSources:
          - name: Prometheus-Externo
            type: prometheus
            uid: prometheus-externo
            url: https://prometheus.xyz.sitex.com.br/
            access: proxy
            isDefault: false
            jsonData:
              timeInterval: 10s
          - access: proxy
            basicAuth: false
            isDefault: false
            jsonData:
              maxLines: 5000
              manageAlerts: false
              timeout: 60
            name: Loki
            type: loki
            uid: loki
            url: http://loki-reading.logging.svc:3100
            editable: true
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - disableDeletion: false
                editable: true
                folder: "infraestrutura"
                name: infraestrutura
                options:
                  path: /var/lib/grafana/dashboards/infraestrutura
                orgId: 1
                type: file
          dashboards:
            infraestrutura:
              kubernetesv2:
                datasource:
                  - name: Prometheus-Externo
                    value: prometheus-externo
                gnetId: 6417
                revision: 2
          grafana.ini:
            auth:
              disable_login_form: false
              disable_signout_menu: false
            auth.anonymous:
              enabled: false
              org_name: Main Org.
              org_role: Admin
            auth.basic:
              enabled: true
            feature_toggles:
              traceToMetrics: true
            server:
              root_url: https://grafana.xyz.com.br
          ingress:
            enabled: true
            hosts:
            - grafana.xyz.com.br
            ingressClassName: nginx
            tls:
            - hosts:
              - grafana.xyz.com.br
          sidecar:
            dashboards:
              enabled: true
              label: grafana_dashboard
              provider:
                allowUiUpdates: true
                foldersFromFilesStructure: true
              annotations:
                grafana_folder: "kubernetes"
              searchNamespace: ALL
            datasources:
              enabled: true
              label: grafana_datasource
              searchNamespace: ALL

        prometheus:
          prometheusSpec:
            enableRemoteWriteReceiver: true
            enableFeatures:
            - exemplar-storage
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            evaluationInterval: 10s
            scrapeInterval: 10s
            scrapeTimeout: 10s
            externalLabels:
              cluster: teste/cluster-teste
            retention: 30d
            storageSpec:
              volumeClaimTemplate:
                metadata:
                  labels:
                    xvelero.io/exclude-from-backup: "true"
                spec:
                  #storageClassName: gp3
                  resources:
                    requests:
                      storage: 50Gi
  sources: []
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true

