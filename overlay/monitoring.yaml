apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  source:
    helm:
      values: |-
        alertmanager:
          config:
            receivers:
            - name: blackhole
            - name: 'teams'
              webhook_configs:
              - url: 'http://prometheus-msteams.monitoring.svc:2000/teams'
                send_resolved: true
            route:
              receiver: blackhole
              group_by: ['alertname', 'cluster_name']
              group_wait: 15s
              group_interval: 5m
              repeat_interval: 3h
              routes:
              - continue: false
                matchers:
                  - alertname =~ "Watchdog"
              - continue: false
                matchers:
                  - alertname =~ "KubeControllerManagerDown|KubeProxyDown|KubeSchedulerDown|TargetDown|KubeDeploymentReplicasMismatch"
                receiver: blackhole
              - continue: true
                matchers:
                  - alertname =~ "KubeControllerManagerDown|KubeProxyDown|KubeSchedulerDown|TargetDown|KubeDeploymentReplicasMismatch|KubeHpaMaxedOut"
                  - namespace =~ "cert-manager|getup|ingress-.*|logging|monitoring|velero|.*-controllers|.*-ingress|.*istio.*|.*-operator|.*-provisioner|.*-system|argocd"
                receiver: teams-estrelinha
              - continue: true
                matchers:
                  - severity =~ "warning|critical"
                receiver: 'teams-estrelinha'
              - continue: false
                matchers:
                  - alertname =~ ".*"
                receiver: blackhole

        prometheus:
          prometheusSpec:
            retention: 7d
          externalLabels:
            cluster: teste2/cluster-teste2

        grafana:
          dashboards:
            infraestrutura:
              kubernetesv2:
                datasource:
                  - name: Prometheus-Externo
                    value: prometheus-externo
                gnetId: 6417
                revision: 1
              cert-manager:
                datasource: prometheus
                url: "https://raw.githubusercontent.com/adonaicosta/gitops-renato/main/overlay/dashboards-via-helm/cert-manager.json"
                # se for um repo fechado, pega o token da conta
                # url: "https://raw.githubusercontent.com/adonaicosta/gitops-renato/overlay/dashboard-via-helm/cert-manager.json?token=GHSATSASASASASASASASASASASASASASASASSASASASASASASAS"
          grafana.ini:
            server:
              root_url: https://grafana.xyz.com.br
          ingress:
            enabled: true
            annotations:
              nginx.ingress.kubernetes.io/configuration-snippet: |
                more_clear_headers "X-Frame-Options";
            hosts:
            - grafana.cluster2.com.br
            ingressClassName: nginx
            tls:
            - hosts:
              - grafana.cluster2.com.br


